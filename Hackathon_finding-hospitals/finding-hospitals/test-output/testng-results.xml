<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-24T07:56:07Z" name="All Test Suite" finished-at="2021-07-24T08:06:59Z" duration-ms="651882">
    <groups>
      <group name="regression">
        <method signature="PractoTest.invalidCheckModule(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" name="invalidCheckModule" class="com.cognizant.hackathon.tests.PractoTest"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="PractoTest.hospitalFindTest(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" name="hospitalFindTest" class="com.cognizant.hackathon.tests.PractoTest"/>
        <method signature="PractoTest.invalidCheckModule(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" name="invalidCheckModule" class="com.cognizant.hackathon.tests.PractoTest"/>
        <method signature="PractoTest.topCitiesNameTest()[pri:2, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" name="topCitiesNameTest" class="com.cognizant.hackathon.tests.PractoTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-07-24T07:56:07Z" name="Practo-finding-hospitals" finished-at="2021-07-24T08:06:59Z" duration-ms="651882">
      <class name="com.cognizant.hackathon.tests.PractoTest">
        <test-method is-config="true" signature="init()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T07:56:09Z" name="init" finished-at="2021-07-24T07:56:19Z" duration-ms="9984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="hospitalFindTest(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T07:56:19Z" name="hospitalFindTest" data-provider="practoHospitalSearchTestData" finished-at="2021-07-24T08:03:52Z" duration-ms="453295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Hospital]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.5+]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hospitalFindTest -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:03:52Z" name="destroy" finished-at="2021-07-24T08:03:55Z" duration-ms="2345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:03:55Z" name="init" finished-at="2021-07-24T08:04:19Z" duration-ms="24503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="topCitiesNameTest()[pri:2, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:04:19Z" name="topCitiesNameTest" finished-at="2021-07-24T08:04:26Z" duration-ms="6327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topCitiesNameTest -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:04:26Z" name="destroy" finished-at="2021-07-24T08:04:36Z" duration-ms="10088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:04:36Z" name="init" finished-at="2021-07-24T08:04:42Z" duration-ms="6636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidCheckModule(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:04:42Z" name="invalidCheckModule" data-provider="practoCorporateWellnessTestData" finished-at="2021-07-24T08:05:20Z" duration-ms="37484" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Smith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc Pvt. Ltd.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hevfckqhcbqbc397]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2374652864h]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1001-5000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCheckModule -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:05:20Z" name="destroy" finished-at="2021-07-24T08:05:22Z" duration-ms="2299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:05:22Z" name="init" finished-at="2021-07-24T08:05:31Z" duration-ms="8576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidCheckModule(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:05:31Z" name="invalidCheckModule" data-provider="practoCorporateWellnessTestData" finished-at="2021-07-24T08:06:06Z" duration-ms="35000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc Pvt. Ltd.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[apple@gmail.con]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[2374652864h]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1001-5000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCheckModule -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:06:06Z" name="destroy" finished-at="2021-07-24T08:06:07Z" duration-ms="1354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
        <test-method is-config="true" signature="init()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:06:07Z" name="init" finished-at="2021-07-24T08:06:19Z" duration-ms="12105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="invalidCheckModule(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:3, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:06:19Z" name="invalidCheckModule" data-provider="practoCorporateWellnessTestData" finished-at="2021-07-24T08:06:57Z" duration-ms="38295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Smith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Abc Pvt. Ltd.]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[hevfckqhcbqbc397]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[1001-5000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCheckModule -->
        <test-method is-config="true" signature="destroy()[pri:0, instance:com.cognizant.hackathon.tests.PractoTest@7e9131d5]" started-at="2021-07-24T08:06:57Z" name="destroy" finished-at="2021-07-24T08:06:59Z" duration-ms="1241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destroy -->
      </class> <!-- com.cognizant.hackathon.tests.PractoTest -->
    </test> <!-- Practo-finding-hospitals -->
  </suite> <!-- All Test Suite -->
</testng-results>
